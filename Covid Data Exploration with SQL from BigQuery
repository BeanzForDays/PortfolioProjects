-- Retreived data from Our World in Data
-- All work was done on Big Query
-- Bigquery Link https://console.cloud.google.com/bigquery?sq=231534673193:394f8f059538423ca2c7ce2404914892

SELECT *
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3, 4

SELECT *
FROM thermal-proton-370214.PortfolioProject.CovidVaccination
WHERE continent IS NOT NULL
ORDER BY 3, 4

-- Select Data that we are going to be using

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1, 2

-- Looking at Total Cases vs Total Deaths
-- Shows mortality likilihood in each country per day
SELECT location, date, total_cases, total_deaths, total_deaths/total_cases*100 AS death_rate
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
ORDER BY 1, 2

-- Looking at Canada specifically

SELECT location, date, total_cases, total_deaths, total_deaths/total_cases*100 AS death_rate
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE location like '%anada%'
ORDER BY 1, 2

-- Looking at Total Cases vs Population
-- What percentage of population got Covid

SELECT location, date, total_cases, population, total_cases/population*100 AS infection_rate_population
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE location like '%anada%'
ORDER BY 1, 2

-- Looking at Countries with Hihgest Infection Rate 

SELECT location, population, MAX(total_cases) AS hihgest_infection_count, MAX(total_cases/population)*100 AS infection_rate
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE total_cases IS NOT NULL AND continent IS NOT NULL
GROUP BY location, population
ORDER BY infection_rate DESC

-- Looking at Countries with Hihgest Death Count

SELECT location, MAX(CAST (total_deaths AS INT64)) AS total_death_count, 
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE total_cases IS NOT NULL AND continent IS NOT NULL
GROUP BY location
ORDER BY total_death_count DESC

-- Looking at Total Deaths by Continent

SELECT continent, MAX(CAST (total_deaths AS INT64)) AS total_death_count, 
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE total_cases IS NOT NULL AND continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count DESC

-- Daily Global Numbers

SELECT date, SUM(new_cases) total_cases, SUM(CAST(new_deaths AS INT64)) total_deaths, SUM(CAST(new_deaths AS INT64))/SUM(new_cases)*100 death_percentage -- total_cases, total_deaths, total_deaths/total_cases*100 AS death_rate
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY 1, 2

-- Total Global Numbers Overall

SELECT SUM(new_cases) total_cases, SUM(CAST(new_deaths AS INT64)) total_deaths, 
SUM(CAST(new_deaths AS INT64))/SUM(new_cases)*100 death_percentage -- total_cases, total_deaths, total_deaths/total_cases*100 AS death_rate
FROM thermal-proton-370214.PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL

-- Joining CovidDeaths and Covid Vaccination Table
SELECT *
FROM thermal-proton-370214.PortfolioProject.CovidDeaths dea
JOIN `thermal-proton-370214.PortfolioProject.CovidVaccination` vac
ON dea.date = vac.date AND dea.location = vac.location
ORDER BY dea.location, dea.date

-- Looking at Total Population vs Vaccination 

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CAST (vac.new_vaccinations AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated, 
FROM thermal-proton-370214.PortfolioProject.CovidDeaths dea
JOIN `thermal-proton-370214.PortfolioProject.CovidVaccination` vac
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL 
ORDER BY 2,3

-- Using CTE

WITH pop_vs_vac AS 
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,  
MAX(CAST (vac.people_vaccinated AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_vaccinated, 
MAX(CAST (vac.people_fully_vaccinated AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_fully_vaccinated, 
MAX(CAST (vac.total_boosters AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_booster_vaccinated
FROM thermal-proton-370214.PortfolioProject.CovidDeaths dea
JOIN `thermal-proton-370214.PortfolioProject.CovidVaccination` vac
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL 
)

SELECT *, (total_vaccinated/population)*100 perc_vaccinated, (total_fully_vaccinated/population)*100 perc_fully_vaccinated, (total_booster_vaccinated/population)*100 perc_booster_vaccinated
FROM pop_vs_vac
ORDER BY 2, 3

-- Creating View for Data Visualisation

CREATE VIEW PortfolioProject.percent_population_vaccinated(continent, location, date, population, new_vaccinated, total_vaccinated, total_fully_vaccinated, total_booster_vaccinated) AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,  MAX(CAST (vac.people_vaccinated AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_vaccinated, MAX(CAST (vac.people_fully_vaccinated AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_fully_vaccinated, MAX(CAST (vac.total_boosters AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS total_booster_vaccinated
FROM thermal-proton-370214.PortfolioProject.CovidDeaths dea
JOIN `thermal-proton-370214.PortfolioProject.CovidVaccination` vac
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL 
